version: '3.8'

services:
  db:
    image: postgres:latest
    restart: on-failure
    expose:
      - '5432'
    volumes:
      - pg_data:/var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $POSTGRES_USER' ]
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - app
      - db
    env_file:
      - .env

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - '6379'

  minio:
    build: ./minio
    restart: on-failure
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    healthcheck:
      test: [ 'CMD-SHELL', 'curl --silent --fail http://localhost:9000/minio/health/live || exit 1' ]
      interval: 10s
      retries: 5
      timeout: 5s
    env_file:
      - .env
    command: sh -c "setup_minio.sh && minio server --console-address ':9090' /data"


volumes:
    pg_data:
    minio_data: